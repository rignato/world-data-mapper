# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input EditRegionInput {
  _id: ID!
  capital: String!
  leader: String!
  name: String!
}

type Error {
  error: String!
}

type Landmark {
  name: String!
  owner: String!
}

type Landmarks {
  error: String
  landmarks: [Landmark!]!
  totalPageCount: Float
}

type Map {
  _id: ID!
  name: String!
}

type Maps {
  error: String
  maps: [Map!]
  totalPageCount: Float
}

type Mutation {
  addLandmark(_id: String!, landmark: String!): StatusResult!
  addMap(name: String!): StatusResult!
  addRegion(parentId: String!, region: RegionInput): RegionResult!
  changeParent(_id: String!, parentId: String!): StatusResult!
  deleteMap(_id: String!): StatusResult!
  deleteRegion(_id: String!): StatusResult!
  editRegion(regionToEdit: EditRegionInput!): StatusResult!
  login(email: String!, password: String!): UserResult!
  logout: StatusResult!
  register(email: String!, name: String!, password: String!): StatusResult!
  renameMap(_id: String!, name: String!): StatusResult!
  update(email: String!, name: String!, password: String!): StatusResult!
  updatePassword(newPassword: String!, oldPassword: String!): StatusResult!
}

type Query {
  getLandmarks(_id: String!, page: Int = 1, perPage: Int = 10): Landmarks!
  getMaps(page: Int = 1, perPage: Int = 10): Maps!
  getRegionById(_id: String!, reversed: Boolean, sortBy: String): RegionViewResult!
  getRegionPath(_id: String!): RegionPathResult!
  getRegions(page: Int = 1, parentId: String!, perPage: Int = 10, reversed: Boolean, sortBy: String): Regions!
  getUser: UserResult!
}

type Region {
  _id: ID!
  capital: String!
  createdAt: DateTime!
  displayPath: [String!]!
  landmarks: [String!]!
  leader: String!
  name: String!
  nextSibling: ID
  path: [ID!]!
  previousSibling: ID
  subregionCount: Float!
}

input RegionInput {
  _id: ID!
  capital: String!
  createdAt: DateTime!
  displayPath: [String!]!
  landmarks: [String!]!
  leader: String!
  name: String!
  path: [String!]!
}

type RegionPath {
  _id: ID!
  displayPath: [String!]!
  name: String!
  path: [String!]!
}

union RegionPathResult = Error | RegionPath

union RegionResult = Error | Region

type RegionView {
  _id: ID!
  capital: String!
  createdAt: DateTime!
  displayPath: [String!]!
  landmarks: [String!]!
  leader: String!
  name: String!
  nextSibling: ID
  path: [ID!]!
  potentialParentIds: [ID!]!
  potentialParentNames: [String!]!
  previousSibling: ID
  subregionCount: Float!
}

union RegionViewResult = Error | RegionView

type Regions {
  displayPath: [String!]!
  error: String
  path: [ID!]!
  regions: [Region!]!
  totalPageCount: Float
}

type StatusResult {
  error: String
  success: Boolean!
}

type User {
  email: String!
  name: String!
}

union UserResult = Error | User
